name: CinnamonToast Tests (MSBuild)

on:
  push:
    branches:
      - dev  
  pull_request:
    branches:
      - dev
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest]
        compiler: [cl, clang]
        include:
          - os: windows-latest
            compiler: cl  # Use MSVC for Windows
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Verify Ninja
      run: ninja --version
    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        java-version: '11'  # You can specify other versions like '8', '17', etc.
        distribution: 'zulu'

    # Optional: Verify Java installation
    - name: Verify JDK installation
      run: java -version
    - name: Set up MSVC and CMake
      uses: microsoft/setup-msbuild@v1
      with:
        vs-version: 'latest'  
        

    # - name: Install Ninja
    #   run: |
    #     choco install ninja 
    - name: Set up vcpkg
      run: |
        # Install required tools and dependencies
        echo "Setting up vcpkg"

        # Clone the vcpkg repository
        git clone https://github.com/Microsoft/vcpkg.git
        cd vcpkg

        # Bootstrap vcpkg to build it
        ./bootstrap-vcpkg.bat
        cd..
        
        ./vcpkg/vcpkg install
   
    - name: Configure with CMake
      run: |
    
        mkdir build
        cd build
        $VCPKG_PATH="$PWD/../vcpkg/scripts/buildsystems/vcpkg.cmake"
        echo $VCPKG_PATH
        if ("${{ matrix.os }}" -eq "cl") {
            cmake .. -G "Visual Studio 17 2022" -DCMAKE_CXX_COMPILER=cl -DCMAKE_C_COMPILER=cl -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE="$VCPKG_PATH" -DPKG_CONFIG_EXECUTABLE="$PWD/../vcpkg/packages/pkgconf_x64-windows/tools/pkgconf/pkgconf.exe" -DCMAKE_MAKE_PROGRAM="C:/ProgramData/chocolatey/bin/ninja.exe"
        }
        
       
    # Step 5: Build the project with Ninja
    - name: Build with MSBuild
      run: |
        cd build
        cmake --build . --config Release  

    # Step 6: Run tests with CTest
    - name: Run tests with CTest
      run: |
        cd build
        dir
        ctest -N
        ctest -C Release --output-on-failure  # Run tests and output on failure
